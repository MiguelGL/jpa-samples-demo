/**
 * This class is generated by jOOQ
 */
package com.mgl.jpa.mapping.samples.jooq.tables;


import com.mgl.jpa.mapping.samples.jooq.Jpa;
import com.mgl.jpa.mapping.samples.jooq.Keys;
import com.mgl.jpa.mapping.samples.jooq.tables.records.EnterpriseuserPermissionRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EnterpriseuserPermission extends TableImpl<EnterpriseuserPermissionRecord> {

    private static final long serialVersionUID = -150688383;

    /**
     * The reference instance of <code>jpa.EnterpriseUser_Permission</code>
     */
    public static final EnterpriseuserPermission ENTERPRISEUSER_PERMISSION = new EnterpriseuserPermission();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EnterpriseuserPermissionRecord> getRecordType() {
        return EnterpriseuserPermissionRecord.class;
    }

    /**
     * The column <code>jpa.EnterpriseUser_Permission.enterpriseUser</code>.
     */
    public final TableField<EnterpriseuserPermissionRecord, Long> ENTERPRISEUSER = createField("enterpriseUser", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>jpa.EnterpriseUser_Permission.permission</code>.
     */
    public final TableField<EnterpriseuserPermissionRecord, String> PERMISSION = createField("permission", org.jooq.impl.SQLDataType.VARCHAR.length(32).nullable(false), this, "");

    /**
     * Create a <code>jpa.EnterpriseUser_Permission</code> table reference
     */
    public EnterpriseuserPermission() {
        this("EnterpriseUser_Permission", null);
    }

    /**
     * Create an aliased <code>jpa.EnterpriseUser_Permission</code> table reference
     */
    public EnterpriseuserPermission(String alias) {
        this(alias, ENTERPRISEUSER_PERMISSION);
    }

    private EnterpriseuserPermission(String alias, Table<EnterpriseuserPermissionRecord> aliased) {
        this(alias, aliased, null);
    }

    private EnterpriseuserPermission(String alias, Table<EnterpriseuserPermissionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Jpa.JPA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EnterpriseuserPermissionRecord>> getKeys() {
        return Arrays.<UniqueKey<EnterpriseuserPermissionRecord>>asList(Keys.KEY_ENTERPRISEUSER_PERMISSION_ENTERPRISEUSER_PERMISSION__ENTERPRISEUSER_PERMISSION_UIDX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EnterpriseuserPermissionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EnterpriseuserPermissionRecord, ?>>asList(Keys.FKRL7GCV4IWAOP529L1PRF4SM8H);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnterpriseuserPermission as(String alias) {
        return new EnterpriseuserPermission(alias, this);
    }

    /**
     * Rename this table
     */
    public EnterpriseuserPermission rename(String name) {
        return new EnterpriseuserPermission(name, null);
    }
}
