/**
 * This class is generated by jOOQ
 */
package com.mgl.jpa.mapping.samples.jooq.tables;


import com.mgl.jpa.mapping.samples.jooq.Jpa;
import com.mgl.jpa.mapping.samples.jooq.Keys;
import com.mgl.jpa.mapping.samples.jooq.tables.records.RegularuserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Regularuser extends TableImpl<RegularuserRecord> {

    private static final long serialVersionUID = 1034908250;

    /**
     * The reference instance of <code>jpa.RegularUser</code>
     */
    public static final Regularuser REGULARUSER = new Regularuser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RegularuserRecord> getRecordType() {
        return RegularuserRecord.class;
    }

    /**
     * The column <code>jpa.RegularUser.registrationSource</code>.
     */
    public final TableField<RegularuserRecord, String> REGISTRATIONSOURCE = createField("registrationSource", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>jpa.RegularUser.signUpTs</code>.
     */
    public final TableField<RegularuserRecord, Timestamp> SIGNUPTS = createField("signUpTs", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>jpa.RegularUser.id</code>.
     */
    public final TableField<RegularuserRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>jpa.RegularUser</code> table reference
     */
    public Regularuser() {
        this("RegularUser", null);
    }

    /**
     * Create an aliased <code>jpa.RegularUser</code> table reference
     */
    public Regularuser(String alias) {
        this(alias, REGULARUSER);
    }

    private Regularuser(String alias, Table<RegularuserRecord> aliased) {
        this(alias, aliased, null);
    }

    private Regularuser(String alias, Table<RegularuserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Jpa.JPA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RegularuserRecord> getPrimaryKey() {
        return Keys.KEY_REGULARUSER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RegularuserRecord>> getKeys() {
        return Arrays.<UniqueKey<RegularuserRecord>>asList(Keys.KEY_REGULARUSER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RegularuserRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RegularuserRecord, ?>>asList(Keys.FK3WYV5WNI5YL2LL2C75ED2CMRF);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Regularuser as(String alias) {
        return new Regularuser(alias, this);
    }

    /**
     * Rename this table
     */
    public Regularuser rename(String name) {
        return new Regularuser(name, null);
    }
}
