/**
 * This class is generated by jOOQ
 */
package com.mgl.jpa.mapping.samples.jooq.tables.daos;


import com.mgl.jpa.mapping.samples.jooq.tables.Company;
import com.mgl.jpa.mapping.samples.jooq.tables.records.CompanyRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompanyDao extends DAOImpl<CompanyRecord, com.mgl.jpa.mapping.samples.jooq.tables.pojos.Company, Long> {

    /**
     * Create a new CompanyDao without any configuration
     */
    public CompanyDao() {
        super(Company.COMPANY, com.mgl.jpa.mapping.samples.jooq.tables.pojos.Company.class);
    }

    /**
     * Create a new CompanyDao with an attached configuration
     */
    public CompanyDao(Configuration configuration) {
        super(Company.COMPANY, com.mgl.jpa.mapping.samples.jooq.tables.pojos.Company.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.mgl.jpa.mapping.samples.jooq.tables.pojos.Company object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.mgl.jpa.mapping.samples.jooq.tables.pojos.Company> fetchById(Long... values) {
        return fetch(Company.COMPANY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.mgl.jpa.mapping.samples.jooq.tables.pojos.Company fetchOneById(Long value) {
        return fetchOne(Company.COMPANY.ID, value);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<com.mgl.jpa.mapping.samples.jooq.tables.pojos.Company> fetchByVersion(Long... values) {
        return fetch(Company.COMPANY.VERSION, values);
    }

    /**
     * Fetch records that have <code>creationTs IN (values)</code>
     */
    public List<com.mgl.jpa.mapping.samples.jooq.tables.pojos.Company> fetchByCreationts(Timestamp... values) {
        return fetch(Company.COMPANY.CREATIONTS, values);
    }

    /**
     * Fetch records that have <code>lastModificationTs IN (values)</code>
     */
    public List<com.mgl.jpa.mapping.samples.jooq.tables.pojos.Company> fetchByLastmodificationts(Timestamp... values) {
        return fetch(Company.COMPANY.LASTMODIFICATIONTS, values);
    }

    /**
     * Fetch records that have <code>city IN (values)</code>
     */
    public List<com.mgl.jpa.mapping.samples.jooq.tables.pojos.Company> fetchByCity(String... values) {
        return fetch(Company.COMPANY.CITY, values);
    }

    /**
     * Fetch records that have <code>street IN (values)</code>
     */
    public List<com.mgl.jpa.mapping.samples.jooq.tables.pojos.Company> fetchByStreet(String... values) {
        return fetch(Company.COMPANY.STREET, values);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.mgl.jpa.mapping.samples.jooq.tables.pojos.Company> fetchByEmail(String... values) {
        return fetch(Company.COMPANY.EMAIL, values);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public com.mgl.jpa.mapping.samples.jooq.tables.pojos.Company fetchOneByEmail(String value) {
        return fetchOne(Company.COMPANY.EMAIL, value);
    }

    /**
     * Fetch records that have <code>firstName IN (values)</code>
     */
    public List<com.mgl.jpa.mapping.samples.jooq.tables.pojos.Company> fetchByFirstname(String... values) {
        return fetch(Company.COMPANY.FIRSTNAME, values);
    }

    /**
     * Fetch records that have <code>lastName IN (values)</code>
     */
    public List<com.mgl.jpa.mapping.samples.jooq.tables.pojos.Company> fetchByLastname(String... values) {
        return fetch(Company.COMPANY.LASTNAME, values);
    }

    /**
     * Fetch records that have <code>organisationName IN (values)</code>
     */
    public List<com.mgl.jpa.mapping.samples.jooq.tables.pojos.Company> fetchByOrganisationname(String... values) {
        return fetch(Company.COMPANY.ORGANISATIONNAME, values);
    }
}
