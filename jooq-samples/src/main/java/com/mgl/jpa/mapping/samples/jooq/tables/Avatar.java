/**
 * This class is generated by jOOQ
 */
package com.mgl.jpa.mapping.samples.jooq.tables;


import com.mgl.jpa.mapping.samples.jooq.Jpa;
import com.mgl.jpa.mapping.samples.jooq.Keys;
import com.mgl.jpa.mapping.samples.jooq.tables.records.AvatarRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Avatar extends TableImpl<AvatarRecord> {

    private static final long serialVersionUID = -254069381;

    /**
     * The reference instance of <code>jpa.Avatar</code>
     */
    public static final Avatar AVATAR = new Avatar();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AvatarRecord> getRecordType() {
        return AvatarRecord.class;
    }

    /**
     * The column <code>jpa.Avatar.id</code>.
     */
    public final TableField<AvatarRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>jpa.Avatar.version</code>.
     */
    public final TableField<AvatarRecord, Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>jpa.Avatar.url</code>.
     */
    public final TableField<AvatarRecord, String> URL = createField("url", org.jooq.impl.SQLDataType.VARCHAR.length(128).nullable(false), this, "");

    /**
     * The column <code>jpa.Avatar.userProfile_id</code>.
     */
    public final TableField<AvatarRecord, Long> USERPROFILE_ID = createField("userProfile_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>jpa.Avatar</code> table reference
     */
    public Avatar() {
        this("Avatar", null);
    }

    /**
     * Create an aliased <code>jpa.Avatar</code> table reference
     */
    public Avatar(String alias) {
        this(alias, AVATAR);
    }

    private Avatar(String alias, Table<AvatarRecord> aliased) {
        this(alias, aliased, null);
    }

    private Avatar(String alias, Table<AvatarRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Jpa.JPA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AvatarRecord, Long> getIdentity() {
        return Keys.IDENTITY_AVATAR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AvatarRecord> getPrimaryKey() {
        return Keys.KEY_AVATAR_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AvatarRecord>> getKeys() {
        return Arrays.<UniqueKey<AvatarRecord>>asList(Keys.KEY_AVATAR_PRIMARY, Keys.KEY_AVATAR_UK_JC6RLWOND8SQBV2WLE8WC8JQ);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AvatarRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AvatarRecord, ?>>asList(Keys.FKK0SJ4GG341GUNW0DXF38X60FO);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TableField<AvatarRecord, Long> getRecordVersion() {
        return VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Avatar as(String alias) {
        return new Avatar(alias, this);
    }

    /**
     * Rename this table
     */
    public Avatar rename(String name) {
        return new Avatar(name, null);
    }
}
