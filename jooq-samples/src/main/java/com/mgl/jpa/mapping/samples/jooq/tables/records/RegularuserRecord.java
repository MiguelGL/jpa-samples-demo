/**
 * This class is generated by jOOQ
 */
package com.mgl.jpa.mapping.samples.jooq.tables.records;


import com.mgl.jpa.mapping.samples.jooq.tables.Regularuser;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RegularuserRecord extends UpdatableRecordImpl<RegularuserRecord> implements Record3<String, Timestamp, Long> {

    private static final long serialVersionUID = -1154117285;

    /**
     * Setter for <code>jpa.RegularUser.registrationSource</code>.
     */
    public void setRegistrationsource(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>jpa.RegularUser.registrationSource</code>.
     */
    public String getRegistrationsource() {
        return (String) get(0);
    }

    /**
     * Setter for <code>jpa.RegularUser.signUpTs</code>.
     */
    public void setSignupts(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>jpa.RegularUser.signUpTs</code>.
     */
    public Timestamp getSignupts() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>jpa.RegularUser.id</code>.
     */
    public void setId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>jpa.RegularUser.id</code>.
     */
    public Long getId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, Timestamp, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, Timestamp, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Regularuser.REGULARUSER.REGISTRATIONSOURCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return Regularuser.REGULARUSER.SIGNUPTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return Regularuser.REGULARUSER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getRegistrationsource();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getSignupts();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegularuserRecord value1(String value) {
        setRegistrationsource(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegularuserRecord value2(Timestamp value) {
        setSignupts(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegularuserRecord value3(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RegularuserRecord values(String value1, Timestamp value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RegularuserRecord
     */
    public RegularuserRecord() {
        super(Regularuser.REGULARUSER);
    }

    /**
     * Create a detached, initialised RegularuserRecord
     */
    public RegularuserRecord(String registrationsource, Timestamp signupts, Long id) {
        super(Regularuser.REGULARUSER);

        set(0, registrationsource);
        set(1, signupts);
        set(2, id);
    }
}
