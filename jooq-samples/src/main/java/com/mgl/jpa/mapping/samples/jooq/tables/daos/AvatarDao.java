/**
 * This class is generated by jOOQ
 */
package com.mgl.jpa.mapping.samples.jooq.tables.daos;


import com.mgl.jpa.mapping.samples.jooq.tables.Avatar;
import com.mgl.jpa.mapping.samples.jooq.tables.records.AvatarRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AvatarDao extends DAOImpl<AvatarRecord, com.mgl.jpa.mapping.samples.jooq.tables.pojos.Avatar, Long> {

    /**
     * Create a new AvatarDao without any configuration
     */
    public AvatarDao() {
        super(Avatar.AVATAR, com.mgl.jpa.mapping.samples.jooq.tables.pojos.Avatar.class);
    }

    /**
     * Create a new AvatarDao with an attached configuration
     */
    public AvatarDao(Configuration configuration) {
        super(Avatar.AVATAR, com.mgl.jpa.mapping.samples.jooq.tables.pojos.Avatar.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.mgl.jpa.mapping.samples.jooq.tables.pojos.Avatar object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.mgl.jpa.mapping.samples.jooq.tables.pojos.Avatar> fetchById(Long... values) {
        return fetch(Avatar.AVATAR.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.mgl.jpa.mapping.samples.jooq.tables.pojos.Avatar fetchOneById(Long value) {
        return fetchOne(Avatar.AVATAR.ID, value);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<com.mgl.jpa.mapping.samples.jooq.tables.pojos.Avatar> fetchByVersion(Long... values) {
        return fetch(Avatar.AVATAR.VERSION, values);
    }

    /**
     * Fetch records that have <code>url IN (values)</code>
     */
    public List<com.mgl.jpa.mapping.samples.jooq.tables.pojos.Avatar> fetchByUrl(String... values) {
        return fetch(Avatar.AVATAR.URL, values);
    }

    /**
     * Fetch records that have <code>userProfile_id IN (values)</code>
     */
    public List<com.mgl.jpa.mapping.samples.jooq.tables.pojos.Avatar> fetchByUserprofileId(Long... values) {
        return fetch(Avatar.AVATAR.USERPROFILE_ID, values);
    }

    /**
     * Fetch a unique record that has <code>userProfile_id = value</code>
     */
    public com.mgl.jpa.mapping.samples.jooq.tables.pojos.Avatar fetchOneByUserprofileId(Long value) {
        return fetchOne(Avatar.AVATAR.USERPROFILE_ID, value);
    }
}
