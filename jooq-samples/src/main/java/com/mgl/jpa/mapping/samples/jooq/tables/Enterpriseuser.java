/**
 * This class is generated by jOOQ
 */
package com.mgl.jpa.mapping.samples.jooq.tables;


import com.mgl.jpa.mapping.samples.jooq.Jpa;
import com.mgl.jpa.mapping.samples.jooq.Keys;
import com.mgl.jpa.mapping.samples.jooq.tables.records.EnterpriseuserRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Enterpriseuser extends TableImpl<EnterpriseuserRecord> {

    private static final long serialVersionUID = -2008636421;

    /**
     * The reference instance of <code>jpa.EnterpriseUser</code>
     */
    public static final Enterpriseuser ENTERPRISEUSER = new Enterpriseuser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EnterpriseuserRecord> getRecordType() {
        return EnterpriseuserRecord.class;
    }

    /**
     * The column <code>jpa.EnterpriseUser.registrationSource</code>.
     */
    public final TableField<EnterpriseuserRecord, String> REGISTRATIONSOURCE = createField("registrationSource", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>jpa.EnterpriseUser.signUpTs</code>.
     */
    public final TableField<EnterpriseuserRecord, Timestamp> SIGNUPTS = createField("signUpTs", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>jpa.EnterpriseUser.creationTs</code>.
     */
    public final TableField<EnterpriseuserRecord, Timestamp> CREATIONTS = createField("creationTs", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>jpa.EnterpriseUser.lastModificationTs</code>.
     */
    public final TableField<EnterpriseuserRecord, Timestamp> LASTMODIFICATIONTS = createField("lastModificationTs", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>jpa.EnterpriseUser.id</code>.
     */
    public final TableField<EnterpriseuserRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>jpa.EnterpriseUser</code> table reference
     */
    public Enterpriseuser() {
        this("EnterpriseUser", null);
    }

    /**
     * Create an aliased <code>jpa.EnterpriseUser</code> table reference
     */
    public Enterpriseuser(String alias) {
        this(alias, ENTERPRISEUSER);
    }

    private Enterpriseuser(String alias, Table<EnterpriseuserRecord> aliased) {
        this(alias, aliased, null);
    }

    private Enterpriseuser(String alias, Table<EnterpriseuserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Jpa.JPA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EnterpriseuserRecord> getPrimaryKey() {
        return Keys.KEY_ENTERPRISEUSER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EnterpriseuserRecord>> getKeys() {
        return Arrays.<UniqueKey<EnterpriseuserRecord>>asList(Keys.KEY_ENTERPRISEUSER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EnterpriseuserRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EnterpriseuserRecord, ?>>asList(Keys.FKMRR9NOVKAQ55WUDE71D8MI3SE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Enterpriseuser as(String alias) {
        return new Enterpriseuser(alias, this);
    }

    /**
     * Rename this table
     */
    public Enterpriseuser rename(String name) {
        return new Enterpriseuser(name, null);
    }
}
