/**
 * This class is generated by jOOQ
 */
package com.mgl.jpa.mapping.samples.jooq.tables.daos;


import com.mgl.jpa.mapping.samples.jooq.tables.Document;
import com.mgl.jpa.mapping.samples.jooq.tables.records.DocumentRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DocumentDao extends DAOImpl<DocumentRecord, com.mgl.jpa.mapping.samples.jooq.tables.pojos.Document, Long> {

    /**
     * Create a new DocumentDao without any configuration
     */
    public DocumentDao() {
        super(Document.DOCUMENT, com.mgl.jpa.mapping.samples.jooq.tables.pojos.Document.class);
    }

    /**
     * Create a new DocumentDao with an attached configuration
     */
    public DocumentDao(Configuration configuration) {
        super(Document.DOCUMENT, com.mgl.jpa.mapping.samples.jooq.tables.pojos.Document.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.mgl.jpa.mapping.samples.jooq.tables.pojos.Document object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>documentKind IN (values)</code>
     */
    public List<com.mgl.jpa.mapping.samples.jooq.tables.pojos.Document> fetchByDocumentkind(String... values) {
        return fetch(Document.DOCUMENT.DOCUMENTKIND, values);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.mgl.jpa.mapping.samples.jooq.tables.pojos.Document> fetchById(Long... values) {
        return fetch(Document.DOCUMENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.mgl.jpa.mapping.samples.jooq.tables.pojos.Document fetchOneById(Long value) {
        return fetchOne(Document.DOCUMENT.ID, value);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<com.mgl.jpa.mapping.samples.jooq.tables.pojos.Document> fetchByVersion(Long... values) {
        return fetch(Document.DOCUMENT.VERSION, values);
    }

    /**
     * Fetch records that have <code>pagesCnt IN (values)</code>
     */
    public List<com.mgl.jpa.mapping.samples.jooq.tables.pojos.Document> fetchByPagescnt(Integer... values) {
        return fetch(Document.DOCUMENT.PAGESCNT, values);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<com.mgl.jpa.mapping.samples.jooq.tables.pojos.Document> fetchByTitle(String... values) {
        return fetch(Document.DOCUMENT.TITLE, values);
    }

    /**
     * Fetch records that have <code>url IN (values)</code>
     */
    public List<com.mgl.jpa.mapping.samples.jooq.tables.pojos.Document> fetchByUrl(String... values) {
        return fetch(Document.DOCUMENT.URL, values);
    }

    /**
     * Fetch records that have <code>filePath IN (values)</code>
     */
    public List<com.mgl.jpa.mapping.samples.jooq.tables.pojos.Document> fetchByFilepath(String... values) {
        return fetch(Document.DOCUMENT.FILEPATH, values);
    }
}
